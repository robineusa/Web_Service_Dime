// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Telmexla.Servicios.DIME.Helpers.ReverseEngineer
{

    using System.Linq;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class MaestrosContext : System.Data.Entity.DbContext, IMaestrosContext
    {
        public System.Data.Entity.DbSet<Deakloclpalo> Deakloclpaloes { get; set; } // deakloclpalo
        public System.Data.Entity.DbSet<Departamento> Departamentoes { get; set; } // DEPARTAMENTOS
        public System.Data.Entity.DbSet<Estado> Estadoes { get; set; } // ESTADO
        public System.Data.Entity.DbSet<Macroproceso> Macroprocesoes { get; set; } // MACROPROCESO
        public System.Data.Entity.DbSet<MaestroAtributo> MaestroAtributoes { get; set; } // MAESTRO_ATRIBUTOS
        public System.Data.Entity.DbSet<MaestroCausa> MaestroCausas { get; set; } // MAESTRO_CAUSAS
        public System.Data.Entity.DbSet<MaestroCierre> MaestroCierres { get; set; } // MAESTRO_CIERRE
        public System.Data.Entity.DbSet<MaestroDivisional> MaestroDivisionals { get; set; } // MAESTRO_DIVISIONAL
        public System.Data.Entity.DbSet<MaestroEstadoMarcacion> MaestroEstadoMarcacions { get; set; } // MAESTRO_ESTADO_MARCACION
        public System.Data.Entity.DbSet<MaestroGestion> MaestroGestions { get; set; } // MAESTRO_GESTION
        public System.Data.Entity.DbSet<MaestroHipotesi> MaestroHipotesis { get; set; } // MAESTRO_HIPOTESIS
        public System.Data.Entity.DbSet<MaestroLineasBlending> MaestroLineasBlendings { get; set; } // MAESTRO_LINEAS_BLENDING
        public System.Data.Entity.DbSet<MaestroOutboundCausa> MaestroOutboundCausas { get; set; } // MAESTRO_OUTBOUND_CAUSA
        public System.Data.Entity.DbSet<MaestroOutboundCierre> MaestroOutboundCierres { get; set; } // MAESTRO_OUTBOUND_CIERRE
        public System.Data.Entity.DbSet<MaestroOutboundCierre2> MaestroOutboundCierre2 { get; set; } // MAESTRO_OUTBOUND_CIERRE_2
        public System.Data.Entity.DbSet<MaestroOutboundMotivo> MaestroOutboundMotivoes { get; set; } // MAESTRO_OUTBOUND_MOTIVO
        public System.Data.Entity.DbSet<MaestroOutboundRazon> MaestroOutboundRazons { get; set; } // MAESTRO_OUTBOUND_RAZON
        public System.Data.Entity.DbSet<MaestroOutboundTipoContacto> MaestroOutboundTipoContactoes { get; set; } // MAESTRO_OUTBOUND_TIPO_CONTACTO
        public System.Data.Entity.DbSet<MaestroOutboundTipoGestion> MaestroOutboundTipoGestions { get; set; } // MAESTRO_OUTBOUND_TIPO_GESTION
        public System.Data.Entity.DbSet<MaestroRazon> MaestroRazons { get; set; } // MAESTRO_RAZON
        public System.Data.Entity.DbSet<MaestroTiemposEsca> MaestroTiemposEscas { get; set; } // MAESTRO_TIEMPOS_ESCA
        public System.Data.Entity.DbSet<MaestroTipoContacto> MaestroTipoContactoes { get; set; } // MAESTRO_TIPO_CONTACTO
        public System.Data.Entity.DbSet<MarcacionesCall> MarcacionesCalls { get; set; } // MARCACIONES_CALL
        public System.Data.Entity.DbSet<Municipio> Municipios { get; set; } // MUNICIPIOS
        public System.Data.Entity.DbSet<NombreLinea> NombreLineas { get; set; } // NOMBRE_LINEA
        public System.Data.Entity.DbSet<Proceso> Procesoes { get; set; } // PROCESOS
        public System.Data.Entity.DbSet<RolUsuario> RolUsuarios { get; set; } // ROL_USUARIO
        public System.Data.Entity.DbSet<Servicio> Servicios { get; set; } // SERVICIOS
        public System.Data.Entity.DbSet<SubProceso> SubProcesoes { get; set; } // SUB_PROCESO
        public System.Data.Entity.DbSet<Sysdiagram> Sysdiagrams { get; set; } // sysdiagrams
        public System.Data.Entity.DbSet<UsuariosGenerico> UsuariosGenericoes { get; set; } // USUARIOS_GENERICOS
        public System.Data.Entity.DbSet<VActualizarSemaforo> VActualizarSemaforoes { get; set; } // V_ACTUALIZAR_SEMAFORO

        static MaestrosContext()
        {
            System.Data.Entity.Database.SetInitializer<MaestrosContext>(null);
        }

        public MaestrosContext()
            : base("Name=MaestrosContext")
        {
        }

        public MaestrosContext(string connectionString)
            : base(connectionString)
        {
        }

        public MaestrosContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public MaestrosContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public MaestrosContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new DeakloclpaloConfiguration());
            modelBuilder.Configurations.Add(new DepartamentoConfiguration());
            modelBuilder.Configurations.Add(new EstadoConfiguration());
            modelBuilder.Configurations.Add(new MacroprocesoConfiguration());
            modelBuilder.Configurations.Add(new MaestroAtributoConfiguration());
            modelBuilder.Configurations.Add(new MaestroCausaConfiguration());
            modelBuilder.Configurations.Add(new MaestroCierreConfiguration());
            modelBuilder.Configurations.Add(new MaestroDivisionalConfiguration());
            modelBuilder.Configurations.Add(new MaestroEstadoMarcacionConfiguration());
            modelBuilder.Configurations.Add(new MaestroGestionConfiguration());
            modelBuilder.Configurations.Add(new MaestroHipotesiConfiguration());
            modelBuilder.Configurations.Add(new MaestroLineasBlendingConfiguration());
            modelBuilder.Configurations.Add(new MaestroOutboundCausaConfiguration());
            modelBuilder.Configurations.Add(new MaestroOutboundCierreConfiguration());
            modelBuilder.Configurations.Add(new MaestroOutboundCierre2Configuration());
            modelBuilder.Configurations.Add(new MaestroOutboundMotivoConfiguration());
            modelBuilder.Configurations.Add(new MaestroOutboundRazonConfiguration());
            modelBuilder.Configurations.Add(new MaestroOutboundTipoContactoConfiguration());
            modelBuilder.Configurations.Add(new MaestroOutboundTipoGestionConfiguration());
            modelBuilder.Configurations.Add(new MaestroRazonConfiguration());
            modelBuilder.Configurations.Add(new MaestroTiemposEscaConfiguration());
            modelBuilder.Configurations.Add(new MaestroTipoContactoConfiguration());
            modelBuilder.Configurations.Add(new MarcacionesCallConfiguration());
            modelBuilder.Configurations.Add(new MunicipioConfiguration());
            modelBuilder.Configurations.Add(new NombreLineaConfiguration());
            modelBuilder.Configurations.Add(new ProcesoConfiguration());
            modelBuilder.Configurations.Add(new RolUsuarioConfiguration());
            modelBuilder.Configurations.Add(new ServicioConfiguration());
            modelBuilder.Configurations.Add(new SubProcesoConfiguration());
            modelBuilder.Configurations.Add(new SysdiagramConfiguration());
            modelBuilder.Configurations.Add(new UsuariosGenericoConfiguration());
            modelBuilder.Configurations.Add(new VActualizarSemaforoConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new DeakloclpaloConfiguration(schema));
            modelBuilder.Configurations.Add(new DepartamentoConfiguration(schema));
            modelBuilder.Configurations.Add(new EstadoConfiguration(schema));
            modelBuilder.Configurations.Add(new MacroprocesoConfiguration(schema));
            modelBuilder.Configurations.Add(new MaestroAtributoConfiguration(schema));
            modelBuilder.Configurations.Add(new MaestroCausaConfiguration(schema));
            modelBuilder.Configurations.Add(new MaestroCierreConfiguration(schema));
            modelBuilder.Configurations.Add(new MaestroDivisionalConfiguration(schema));
            modelBuilder.Configurations.Add(new MaestroEstadoMarcacionConfiguration(schema));
            modelBuilder.Configurations.Add(new MaestroGestionConfiguration(schema));
            modelBuilder.Configurations.Add(new MaestroHipotesiConfiguration(schema));
            modelBuilder.Configurations.Add(new MaestroLineasBlendingConfiguration(schema));
            modelBuilder.Configurations.Add(new MaestroOutboundCausaConfiguration(schema));
            modelBuilder.Configurations.Add(new MaestroOutboundCierreConfiguration(schema));
            modelBuilder.Configurations.Add(new MaestroOutboundCierre2Configuration(schema));
            modelBuilder.Configurations.Add(new MaestroOutboundMotivoConfiguration(schema));
            modelBuilder.Configurations.Add(new MaestroOutboundRazonConfiguration(schema));
            modelBuilder.Configurations.Add(new MaestroOutboundTipoContactoConfiguration(schema));
            modelBuilder.Configurations.Add(new MaestroOutboundTipoGestionConfiguration(schema));
            modelBuilder.Configurations.Add(new MaestroRazonConfiguration(schema));
            modelBuilder.Configurations.Add(new MaestroTiemposEscaConfiguration(schema));
            modelBuilder.Configurations.Add(new MaestroTipoContactoConfiguration(schema));
            modelBuilder.Configurations.Add(new MarcacionesCallConfiguration(schema));
            modelBuilder.Configurations.Add(new MunicipioConfiguration(schema));
            modelBuilder.Configurations.Add(new NombreLineaConfiguration(schema));
            modelBuilder.Configurations.Add(new ProcesoConfiguration(schema));
            modelBuilder.Configurations.Add(new RolUsuarioConfiguration(schema));
            modelBuilder.Configurations.Add(new ServicioConfiguration(schema));
            modelBuilder.Configurations.Add(new SubProcesoConfiguration(schema));
            modelBuilder.Configurations.Add(new SysdiagramConfiguration(schema));
            modelBuilder.Configurations.Add(new UsuariosGenericoConfiguration(schema));
            modelBuilder.Configurations.Add(new VActualizarSemaforoConfiguration(schema));
            return modelBuilder;
        }
        
        // Stored Procedures
        public int ReporteMRazonCe()
        {
            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
 
            Database.ExecuteSqlCommand("EXEC @procResult = [dbo].[Reporte_M_Razon_CE] ", procResultParam);
 
            return (int) procResultParam.Value;
        }

        public System.Collections.Generic.List<SeleccionLineaPAsesorReturnModel> SeleccionLineaPAsesor()
        {
            int procResult;
            return SeleccionLineaPAsesor(out procResult);
        }

        public System.Collections.Generic.List<SeleccionLineaPAsesorReturnModel> SeleccionLineaPAsesor(out int procResult)
        {
            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
            var procResultData = Database.SqlQuery<SeleccionLineaPAsesorReturnModel>("EXEC @procResult = [dbo].[Seleccion_Linea_P_Asesor] ", procResultParam).ToList();

            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public async System.Threading.Tasks.Task<System.Collections.Generic.List<SeleccionLineaPAsesorReturnModel>> SeleccionLineaPAsesorAsync()
        {
            var procResultData = await Database.SqlQuery<SeleccionLineaPAsesorReturnModel>("EXEC [dbo].[Seleccion_Linea_P_Asesor] ").ToListAsync();

            return procResultData;
        }

        public System.Collections.Generic.List<SeleccionaPerfilesReturnModel> SeleccionaPerfiles()
        {
            int procResult;
            return SeleccionaPerfiles(out procResult);
        }

        public System.Collections.Generic.List<SeleccionaPerfilesReturnModel> SeleccionaPerfiles(out int procResult)
        {
            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
            var procResultData = Database.SqlQuery<SeleccionaPerfilesReturnModel>("EXEC @procResult = [dbo].[Selecciona_Perfiles] ", procResultParam).ToList();

            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public async System.Threading.Tasks.Task<System.Collections.Generic.List<SeleccionaPerfilesReturnModel>> SeleccionaPerfilesAsync()
        {
            var procResultData = await Database.SqlQuery<SeleccionaPerfilesReturnModel>("EXEC [dbo].[Selecciona_Perfiles] ").ToListAsync();

            return procResultData;
        }

    }
}
// </auto-generated>
